{"version":3,"sources":["Item/Item.js","Api/fetchGogo.js","Home/Home.js","Detail/Detail.js","index.js"],"names":["Item","anime","className","src","image","alt","title","to","pathname","state","url","link","HOME_URL","getHomeData","a","axios","get","html","cheerio","load","data","$","each","i","elem","push","find","attr","getDetailPlayer","playerUrl","replace","Home","useState","animeList","setAnimeList","useEffect","map","Detail","useLocation","videoUrl","setVideoUrl","height","width","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"sOAsBeA,MAnBf,YAAwB,IAATC,EAAQ,EAARA,MACX,OAEQ,qBAAKC,UAAU,kBAAf,SACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,QAAOC,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMK,QACnD,qBAAKJ,UAAU,QAAf,SACI,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAI,CAAEC,SAAU,0BAA4BC,MAAO,CAAEC,IAAKT,EAAMU,OAAvF,SACK,4BAAIV,EAAMK,oB,kCCVjCM,EAAW,uBAEXC,EAAW,uCAAG,gCAAAC,EAAA,sEACCC,IAAMC,IAAIJ,GADX,cACZK,EADY,gBAEAC,IAAQC,KAAKF,EAAKG,MAFlB,cAEVC,EAFU,OAGVD,EAAO,GACbC,EAAE,sBAAsBC,MAAK,SAACC,EAAEC,GAC5BJ,EAAKK,KAAK,CACNrB,MAAOiB,EAAEG,GAAME,KAAK,OAAOC,KAAK,OAChCrB,MAAOe,EAAEG,GAAMG,KAAK,SACpBhB,KAAMC,EAAWS,EAAEG,GAAMG,KAAK,aARtB,kBAWTP,GAXS,2CAAH,qDAcXQ,EAAe,uCAAG,WAAOlB,GAAP,mBAAAI,EAAA,sEACHC,IAAMC,IAAIN,GADP,cAChBO,EADgB,gBAENC,IAAQC,KAAKF,EAAKG,MAFZ,cAEhBC,EAFgB,OAKpBQ,GADIA,EAAYR,EAAE,sBAAsBM,KAAK,QACvBG,QAAQ,gBAAiB,kBAL3B,kBAMbD,GANa,2CAAH,sDCUNE,MAxBf,WACI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAYA,OATAC,qBAAU,WACN,sBAAC,4BAAArB,EAAA,sEAC0BD,IAD1B,OACOoB,EADP,OACyCG,KAAI,SAAAnC,GACtC,OAAO,cAAC,EAAD,CAAMA,MAAOA,OAExBiC,EAAaD,GAJhB,0CAAD,KAMD,IAGC,gCACI,2CACCA,M,OCKEI,MArBf,WAAmB,IAAD,IACV3B,EAAG,UAAG4B,qBAAH,iBAAG,EAAe7B,aAAlB,aAAG,EAAsBC,IAChC,EAAgCsB,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KASA,OARAL,qBAAU,WACN,sBAAC,4BAAArB,EAAA,sEACwBc,EAAgBlB,GADxC,OACO6B,EADP,OAEGC,EAAYD,GAFf,0CAAD,KAID,CAAC7B,IAIA,8BAII,wBAAQP,IAAKoC,EAAUE,OAAO,OAAOC,MAAM,MAAMpC,MAAM,sBCbnEqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWjB,EAAhD,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOgB,KAAK,0BAA0BC,UAAWX,EAAjD,SACE,cAAC,EAAD,aAMVY,SAASC,eAAe,U","file":"static/js/main.dd6e2f85.chunk.js","sourcesContent":["import './Item.css';\nimport {Link} from \"react-router-dom\";\n\nfunction Item({anime}) {\n    return (\n       \n            <div className=\"Image-container\">\n            <div className=\"Container\">\n                <div className=\"Cover-container\">\n                    <img className=\"Cover\"src={anime.image} alt={anime.title}/>\n                    <div className=\"Title\">\n                        <Link className=\"Link\" to={{ pathname: '/gogoanime-clone/Detail',  state: { url: anime.link }}}>\n                             <p>{anime.title}</p>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            </div>\n      \n    )\n}\n\nexport default Item;","import axios from 'axios';\nimport cheerio from 'cheerio';\nconst HOME_URL = 'https://gogoanime.pe';\n\nconst getHomeData = async () => {\n    let html = await axios.get(HOME_URL)\n    const $ = await cheerio.load(html.data);\n    const data = [];    \n    $(\".items > li .img a\").each((i,elem) => {\n        data.push({\n            image: $(elem).find(\"img\").attr('src'),\n            title: $(elem).attr('title'),\n            link: HOME_URL + $(elem).attr('href')\n        })\n    })\n    return data;\n}\n\nconst getDetailPlayer = async (url) => {\n    let html = await axios.get(url)\n    let $ = await cheerio.load(html.data);\n\n    let playerUrl = $('.play-video iframe').attr('src')\n    playerUrl = playerUrl.replace('streaming.php', 'loadserver.php')\n    return playerUrl;\n}\n\n//TODO: By pass cors here\n//   html = await axios.request(\n//     {\n//         url: playerUrl,\n//         method: 'get',\n//         headers: {'X-Requested-With': 'XMLHttpRequest'},\n//     })\n//     console.log(html)\n// $ = await cheerio.load(html.data);\n// let videoUrl = $('video')?.attr('src');\n// return videoUrl;\n\nexport {\n    getHomeData,\n    getDetailPlayer\n};","import Item from '../Item/Item'\nimport React, { useState, useEffect } from 'react';\nimport {getHomeData} from '../Api/fetchGogo'\n\nfunction Home() {\n    const [animeList, setAnimeList] = useState([]);\n    \n    //ComponentDidMount\n    useEffect(() => {\n        (async () => {\n            let animeList = (await getHomeData()).map(anime => {\n                return <Item anime={anime}/>\n            })\n            setAnimeList(animeList);\n        })();\n    }, []);\n    \n    return (\n        <div>\n            <h1>Home page</h1>\n            {animeList}\n            {/* <Item anime={animeList}/>\n            <Item anime={animeList}/>\n            <Item anime={animeList}/> */}\n        </div>\n    )\n}\n\nexport default Home;","import {useLocation} from \"react-router-dom\";\nimport {getDetailPlayer} from '../Api/fetchGogo'\nimport React, { useState, useEffect } from 'react';\n\nfunction Detail() {\n    let url = useLocation()?.state?.url\n    const [videoUrl, setVideoUrl] = useState([]);\n    useEffect(() => {\n        (async () => {\n            let videoUrl = await getDetailPlayer(url)\n            setVideoUrl(videoUrl);\n        })();\n    }, [url]);\n\n    //TODO: handle cors here\n    return (\n        <div>\n            {/* <video width=\"1280\" height=\"720\" controls> */}\n                {/* <source src={videoUrl} type=\"video/mp4\"/> */}\n            {/* </video> */}\n            <iframe src={videoUrl} height=\"1280\" width=\"720\" title=\"Iframe Example\"></iframe>\n        </div>\n    )\n}\n\nexport default Detail;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home/Home'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Detail from './Detail/Detail';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <Switch>\n          <Route exact path=\"/gogoanime-clone\" component={Home}>\n            <Home />\n          </Route>\n          <Route path=\"/gogoanime-clone/detail\" component={Detail}>\n            <Detail />\n          </Route>\n        </Switch>\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}